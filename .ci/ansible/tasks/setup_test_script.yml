---
- name: Extend environment for Fleet testing
  lineinfile:
    state: present
    line: "{{item}}"
    insertafter: EOF
    dest: "/home/{{ansible_user}}/e2e-testing/.env"
    create: yes
  with_items:
    - "export SUITE={{ lookup('env', 'SUITE') or 'fleet' }}"
    - "export PROVIDER={{ lookup('env', 'PROVIDER') or 'remote' }}"
  when: "'fleet_arm64' in group_names or 'fleet_amd64' in group_names"

- name: Extend environment for Fleet with elastic-package testing
  lineinfile:
    state: present
    line: "{{item}}"
    insertafter: EOF
    dest: "/home/{{ansible_user}}/e2e-testing/.env"
    create: yes
  with_items:
    - "export SUITE={{ lookup('env', 'SUITE') or 'fleet' }}"
    - "export PROVIDER={{ lookup('env', 'PROVIDER') or 'elastic-package' }}"
    - "unset KIBANA_URL"
    - "unset KIBANA_PASSWORD"
    - "unset ELASTICSEARCH_URL"
    - "unset ELASTICSEARCH_PASSWORD"
    - "unset FLEET_URL"
    - "unset SKIP_PULL"
  when: "'fleet_elastic_pkg' in group_names"


- name: Extend environment for Kubernetes Autodiscover testing
  lineinfile:
    state: present
    line: "{{item}}"
    insertafter: EOF
    dest: "/home/{{ansible_user}}/e2e-testing/.env"
    create: yes
  with_items:
    - "export SUITE={{ lookup('env', 'SUITE') or 'kubernetes-autodiscover' }}"
    - "export PROVIDER={{ lookup('env', 'PROVIDER') or 'docker' }}"
    - "unset KIBANA_URL"
    - "unset KIBANA_PASSWORD"
    - "unset ELASTICSEARCH_URL"
    - "unset ELASTICSEARCH_PASSWORD"
    - "unset FLEET_URL"
    - "unset SKIP_PULL"
  when: "'kubernetes_autodiscover' in group_names"

- name: Extend environment for Helm testing
  lineinfile:
    state: present
    line: "{{item}}"
    insertafter: EOF
    dest: "/home/{{ansible_user}}/e2e-testing/.env"
    create: yes
  with_items:
    - "export SUITE={{ lookup('env', 'SUITE') or 'helm' }}"
    - "export PROVIDER={{ lookup('env', 'PROVIDER') or 'docker' }}"
    - "unset KIBANA_URL"
    - "unset KIBANA_PASSWORD"
    - "unset ELASTICSEARCH_URL"
    - "unset ELASTICSEARCH_PASSWORD"
    - "unset FLEET_URL"
    - "unset SKIP_PULL"
  when: "'helm' in group_names"

- name: Extend environment
  lineinfile:
    state: present
    line: "{{item}}"
    insertafter: EOF
    dest: "/home/{{ansible_user}}/e2e-testing/.env"
    create: yes
  with_items:
    - "export STACK_VERSION={{ lookup('file', '{{workspace}}/.stack-version') or '8.0.0-SNAPSHOT' }}"
    - "export BEAT_VERSION={{ lookup('file', '{{workspace}}/.stack-version') or '8.0.0-SNAPSHOT' }}"
    - "export ELASTIC_APM_GLOBAL_LABELS={{ lookup('env', 'ELASTIC_APM_GLOBAL_LABELS') }}"
    - "export PATH=$PATH:/opt/go/{{golang_version}}/bin"

- name: Create Fleet test script file
  become: no
  copy:
    owner: "{{ansible_user}}"
    group: "{{ansible_user}}"
    mode: '0777'
    dest: "/home/{{ansible_user}}/e2e-testing/.ci/scripts/functional-test.sh"
    content: |
       #!/usr/bin/env bash
       set -euxo pipefail

       BASE_DIR="/home/{{ansible_user}}/e2e-testing"
       source "${BASE_DIR}/.env"

       "${BASE_DIR}/.ci/scripts/install-test-dependencies.sh" "${SUITE}"

       SEED=$(date +%Y-%m-%d-%H:%M:%S)
       REPORT="${BASE_DIR}/outputs/TEST-$(uname -m)-${SUITE}-{{runId}}-${SEED}"

       TAGS="${1}" \
         FORMAT=junit:${REPORT}.xml \
         STACK_VERSION=${STACK_VERSION} \
         BEAT_VERSION=${BEAT_VERSION} \
         make --no-print-directory -C "${BASE_DIR}/e2e/_suites/${SUITE}" functional-test
